<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PerpetuumMusica.View.Styles"
                    xmlns:cc="clr-namespace:PerpetuumMusica.View.CustomControls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/MediaResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--tooltip-->
    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Opacity" Value="0.7"/>
    </Style>
    
    <!--button styles-->
    <Style TargetType="Button" x:Key="MouseOverCursorChangeStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="cc:pmButton" x:Key="roundCornerButton" BasedOn="{StaticResource MouseOverCursorChangeStyle}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="cc:pmButton">
                    <Border x:Name="Back" BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="cc:pmButton" x:Key="pmButton" BasedOn="{StaticResource roundCornerButton}">
        <Setter Property="Background" Value="{DynamicResource main_color}"/>
        <Setter Property="Foreground" Value="{DynamicResource foreground_color}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource main_color_brighter}"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.04" ScaleY="1.04"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed"  Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="{DynamicResource main_color_darker}"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="cc:pmButton" BasedOn="{StaticResource pmButton}"/>



    <!--Icon Button-->
    <Style TargetType="{x:Type cc:IconButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:IconButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To="0.15"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To="0.3"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="fillColor" Fill="{StaticResource foreground_color}" Width="40" Height="40" Opacity="0"/>
                        <cc:Icon ImageSource="{TemplateBinding ImageSource}" Margin="12, 0" />
                    </Grid>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type cc:IconButton}" x:Key="NormalIconButtonStyle">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:IconButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <cc:Icon x:Name="Icon" ImageSource="{TemplateBinding ImageSource}" Margin="12, 0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--the "pause/play" button style-->
    <Style TargetType="cc:IconButton" x:Key="playButton" BasedOn="{StaticResource pmButton}">
        <Setter Property="Background" Value="{DynamicResource main_color}"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="cc:IconButton">
                    <Grid Margin="5">
                        <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Width}" Fill="{TemplateBinding Background}"/>
                        <cc:Icon ImageSource="{TemplateBinding ImageSource}" Height="60" Width="60"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="TogglePlayItemButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <ContentPresenter x:Name="Index" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Grid x:Name="mouseOverIcons" Visibility="Hidden">
                            <cc:Icon x:Name="PlayIcon" Foreground="{Binding ElementName=Index, Path=Foreground}" ImageSource="{StaticResource playIcon}" Height="25" Width="25" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                                     Visibility="Visible"/>
                            <cc:Icon x:Name="PauseIcon" Foreground="{Binding ElementName=Index, Path=Foreground}" ImageSource="{StaticResource pauseIcon}" Height="25" Width="25" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden"/>
                        </Grid>
                        <cc:Icon x:Name="playingIcon" Foreground="{Binding ElementName=Index, Path=Foreground}" ImageSource="{StaticResource playingIcon}" Height="25" Width="25" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden"/>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                                    Storyboard.TargetName="playingIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                                    Storyboard.TargetName="Index">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                                    Storyboard.TargetName="mouseOverIcons">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                                    Storyboard.TargetName="playingIcon">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                                    Storyboard.TargetName="Index">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>